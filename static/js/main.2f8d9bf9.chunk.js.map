{"version":3,"sources":["components/Button/Button.js","App.js","components/Board/Board.js","index.js"],"names":["Button","props","logKey","e","code","value","playSound","sound","document","getElementById","currentTime","play","setState","button","addEventListener","this","removeEventListener","className","id","onClick","src","url","Component","soundButtons1","key","keycode","App","handleChange","isSoundButtons1","state","switchPower","power","setVolume","volume","target","status","Math","floor","setTimeout","playButton","audio","Audio","isChecked","map","ReactDOM","render","StrictMode"],"mappings":"2QAwDeA,G,oEApDX,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAiBRC,OAAS,SAACC,GACLA,EAAEC,MAAQ,MAAQ,EAAKH,MAAMI,OAC9B,EAAKJ,MAAMK,aApBG,EAuBlBA,UAAY,WACV,IAAMC,EAAQC,SAASC,eAAe,EAAKR,MAAMI,OACjDE,EAAMG,YAAc,EACpBH,EAAMI,OACN,EAAKC,SAAS,CACZC,OAAQ,OA5BM,E,gEAKhBL,SAASM,iBAAiB,UAAWC,KAAKb,U,6CAI1CM,SAASQ,oBAAoB,UAAWD,KAAKb,U,+BA4B7C,OACE,sBAAKe,UAAU,WACbC,GAAIH,KAAKd,MAAMiB,GACfC,QAASJ,KAAKd,MAAMK,UAFtB,UAIE,uBACEW,UAAU,OACVC,GAAIH,KAAKd,MAAMI,MACfe,IAAKL,KAAKd,MAAMoB,MACfN,KAAKd,MAAMI,a,GA/CHiB,cCGfC,GCiHcD,YDjHE,CACpB,CACEE,IAAK,IACLC,QAAS,GACTP,GAAI,WACJG,IAAK,4DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,WACJG,IAAK,4DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,WACJG,IAAK,4DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,WACJG,IAAK,8DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,OACJG,IAAK,4DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,UACJG,IAAK,0DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,cACJG,IAAK,8DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,OACJG,IAAK,8DAEP,CACEG,IAAK,IACLC,QAAS,GACTP,GAAI,YACJG,IAAK,4DAqLMK,E,kDAtHb,WAAYzB,GAAO,IAAD,8BAChB,cAAMA,IAYR0B,aAAe,WACb,EAAKf,SAAS,CACZgB,iBAAkB,EAAKC,MAAMD,mBAff,EAmBlBE,YAAc,WACZ,EAAKlB,SAAS,CACZmB,OAAQ,EAAKF,MAAME,SArBL,EAyBlBC,UAAY,SAAC7B,GACX,EAAKS,SAAS,CACZqB,OAAQ9B,EAAE+B,OAAO7B,MACjB8B,OAAQ,WAAaC,KAAKC,MAA0B,IAApB,EAAKR,MAAMI,UAE7CK,YAAW,WACT,EAAK1B,SAAS,CACZuB,OAAQ,OAET,MAlCa,EAqClBI,WAAa,SAAClB,EAAKH,GACjB,IAAIsB,EAAQ,IAAIC,MAAMpB,GACnB,EAAKpB,MAAM8B,QACbS,EAAMP,OAAS,EAAKhC,MAAMgC,OAC1B,EAAKrB,SAAS,CACZC,OAAQK,IAEVoB,YAAW,WACT,EAAK1B,SAAS,CACZC,OAAQ,OAET,MACH2B,EAAM7B,SAjDS,EAqDlBL,UAAY,SAACkB,EAAKN,GAChB,IAAMX,EAAQC,SAASC,eAAee,GACtCjB,EAAMG,YAAc,EACpBH,EAAMI,OACN,EAAKC,SAAS,CACZC,OAAQK,KAxDV,EAAKW,MAAQ,CACXD,iBAAiB,EACjBG,OAAO,EACPE,OAAQ,GACRE,OAAQ,GACRO,WAAW,EACX7B,OAAQ,IARM,E,qDAmET,IAAD,OAEN,OACE,sBAAKK,GAAG,eAAR,UAoCA,qBAAKA,GAAG,UAAR,SACGH,KAAKc,MAAMhB,SAGbU,EAAcoB,KAAI,SAAApC,GAAK,OAAI,cAAC,EAAD,CAAQD,UAAW,kBAAM,EAAKA,UAAUC,EAAMiB,IAAKjB,EAAMW,KAAKC,QAAS,kBAAM,EAAKoB,WAAWhC,EAAMc,IAAKd,EAAMW,KAAKb,MAASE,EAAMiB,IAAKH,IAAMd,EAAMc,IAAKH,GAAKX,EAAMW,e,GA/GnLI,a,MEnHlBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,W","file":"static/js/main.2f8d9bf9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\nclass Button extends Component {\r\n    constructor(props){\r\n      super(props)\r\n    }\r\n    //tylko w tym miejscu w reactie można dodać eventlistener\r\n    componentDidMount() {\r\n      document.addEventListener('keydown', this.logKey);\r\n    }\r\n    //jak go nie usuniesz to będzie wywalało błąd, że trzeba go usunąć\r\n    componentWillUnmount() {\r\n      document.removeEventListener('keydown', this.logKey);\r\n    }\r\n  \r\n    /*logKey = (e) => {\r\n      if(e.code == \"Key\" + this.props.value){\r\n        this.props.onClick()\r\n      }\r\n    }\r\n*/\r\n    logKey = (e) => {\r\n      if(e.code == \"Key\" + this.props.value){\r\n        this.props.playSound()\r\n      }\r\n    }\r\n    playSound = () => {\r\n      const sound = document.getElementById(this.props.value);\r\n      sound.currentTime = 0;\r\n      sound.play();\r\n      this.setState({\r\n        button: \"z\"\r\n      })\r\n      /*\r\n      this.activatePad();\r\n      setTimeout(() => this.activatePad(), 100);\r\n      this.props.updateDisplay(this.props.clipId.replace(/-/g, ' ')); */\r\n    }\r\n  \r\n    render(){\r\n      return(\r\n        <div className=\"drum-pad\"\r\n          id={this.props.id}\r\n          onClick={this.props.playSound}>\r\n         {/* <button className=\"drum-pad\" onClick={this.props.onClick}>{this.props.value}</button>*/} \r\n          <audio\r\n            className='clip' \r\n            id={this.props.value}\r\n            src={this.props.url}/>\r\n            {this.props.value}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Button","import React, { Component } from 'react';\nimport './App.scss';\n import Board from './components/Board/Board'\nimport Button from './components/Button/Button'\n\n\nconst soundButtons1 = [\n  {\n    key: 'Q',\n    keycode: 81,\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n  },\n  {\n    key: 'W',\n    keycode: 87,\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n  },\n  {\n    key: 'E',\n    keycode: 69,\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n  },\n  {\n    key: 'A',\n    keycode: 65,\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n  },\n  {\n    key: 'S',\n    keycode: 83,\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n  },\n  {\n    key: 'D',\n    keycode: 68,\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n  },\n  {\n    key: 'Z',\n    keycode: 90,\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n  },\n  {\n    key: 'X',\n    keycode: 88,\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    key: 'C',\n    keycode: 67,\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n\n]\n\nconst soundButtons2 = [\n  {\n    key: 'Q',\n    keycode: 81,\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n  },\n  {\n    key: 'W',\n    keycode: 87,\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n  },\n  {\n    key: 'E',\n    keycode: 69,\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n  },\n  {\n    key: 'A',\n    keycode: 65,\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n  },\n  {\n    key: 'S',\n    keycode: 83,\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n  },\n  {\n    key: 'D',\n    keycode: 68,\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n  },\n  {\n    key: 'Z',\n    keycode: 90,\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n  },\n  {\n    key: 'X',\n    keycode: 88,\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n  },\n  {\n    key: 'C',\n    keycode: 67,\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n  },\n]\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isSoundButtons1: true,\n      power: true,\n      volume: 0.4,\n      status: '',\n      isChecked: true,\n      button: ''\n    } \n  }\n\n\n  handleChange = () => {\n    this.setState({\n      isSoundButtons1: !this.state.isSoundButtons1\n    }) \n  }\n\n  switchPower = () =>{\n    this.setState({\n      power: !this.state.power\n    })\n  }\n\n  setVolume = (e) => {\n    this.setState({\n      volume: e.target.value,\n      status: \"Volume: \" + Math.floor(this.state.volume * 100)\n    })\n    setTimeout(() => {\n      this.setState({\n        status: ''\n      })\n    }, 3000)\n  }\n\n  playButton = (url, id) => {\n    var audio = new Audio(url);\n    if(this.props.power){\n     audio.volume = this.props.volume\n     this.setState({\n       button: id\n     })\n     setTimeout(() => {\n       this.setState({\n         button: ''\n       })\n     }, 1500)\n     audio.play();\n    }\n  }\n\n  playSound = (key, id) => {\n    const sound = document.getElementById(key);\n    sound.currentTime = 0;\n    sound.play();\n    this.setState({\n      button: id\n    })\n    /*\n    this.activatePad();\n    setTimeout(() => this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' ')); */\n  }\n  //let status = \"Volume: \" + Math.floor(this.state.volume * 100) \n  // ten status pod render był.\n  render(){\n    \n    return (\n      <div id=\"drum-machine\">\n    { /* <div id=\"drum-machine\" className=\"container\">\n        <div className=\"row machine\">\n          <div className=\"col-md-6\">\n            <Board isSoundButtons1 = {this.state.isSoundButtons1}  status = {this.state.status} power = {this.state.power} volume = {this.state.volume}/>       \n          </div>\n            <div className=\"col-md-6 text-center\">\n              <div className=\"row\">\n                <div className=\"power col-12\">\n                  <p className=\"power__paragraph\">Power:</p>\n                  <label className=\"switch\">\n                    <input type=\"checkbox\" checked = {this.state.power} onChange={this.switchPower}/>\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                   <input type=\"range\" className=\"range\" min=\"0\" max=\"1\" step='0.01' value={this.state.volume} volume = {this.state.volume} power = {this.state.power} onChange={this.setVolume} />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"bank col-12\">\n                  <p className=\"bank__paragraph\">Bank:</p>\n                  <label className=\"switch\">\n                    <input type=\"checkbox\" checked = {this.state.isSoundButtons1} onChange={this.handleChange}/>\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n\n            </div>\n        </div>\n    </div> */}\n\n    \n      <div id=\"display\">\n        {this.state.button}\n      </div>\n\n      {soundButtons1.map(sound => <Button playSound={() => this.playSound(sound.key, sound.id)} onClick={() => this.playButton(sound.url, sound.id)} value = {sound.key} url ={sound.url} id= {sound.id}/>) }\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './Board.scss';\r\nimport Button from '../Button/Button'\r\n\r\nconst soundButtons1 = [\r\n    {\r\n      key: 'Q',\r\n      keycode: 81,\r\n      id: 'Heater-1',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    },\r\n    {\r\n      key: 'W',\r\n      keycode: 87,\r\n      id: 'Heater-2',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n    },\r\n    {\r\n      key: 'E',\r\n      keycode: 69,\r\n      id: 'Heater-3',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    },\r\n    {\r\n      key: 'A',\r\n      keycode: 65,\r\n      id: 'Heater-4',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n    },\r\n    {\r\n      key: 'S',\r\n      keycode: 83,\r\n      id: 'Clap',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n    },\r\n    {\r\n      key: 'D',\r\n      keycode: 68,\r\n      id: 'Open-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n    },\r\n    {\r\n      key: 'Z',\r\n      keycode: 90,\r\n      id: \"Kick-n'-Hat\",\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n    },\r\n    {\r\n      key: 'X',\r\n      keycode: 88,\r\n      id: 'Kick',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n    },\r\n    {\r\n      key: 'C',\r\n      keycode: 67,\r\n      id: 'Closed-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n    },\r\n  \r\n  ]\r\n  \r\n  const soundButtons2 = [\r\n    {\r\n      key: 'Q',\r\n      keycode: 81,\r\n      id: 'Chord-1',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n    },\r\n    {\r\n      key: 'W',\r\n      keycode: 87,\r\n      id: 'Chord-2',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n    },\r\n    {\r\n      key: 'E',\r\n      keycode: 69,\r\n      id: 'Chord-3',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n    },\r\n    {\r\n      key: 'A',\r\n      keycode: 65,\r\n      id: 'Shaker',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n    },\r\n    {\r\n      key: 'S',\r\n      keycode: 83,\r\n      id: 'Open-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n    },\r\n    {\r\n      key: 'D',\r\n      keycode: 68,\r\n      id: 'Closed-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n    },\r\n    {\r\n      key: 'Z',\r\n      keycode: 90,\r\n      id: 'Punchy-Kick',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n    },\r\n    {\r\n      key: 'X',\r\n      keycode: 88,\r\n      id: 'Side-Stick',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n    },\r\n    {\r\n      key: 'C',\r\n      keycode: 67,\r\n      id: 'Snare',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n    },\r\n  ]\r\n\r\nclass Board extends Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.state={\r\n        button: ''\r\n      }\r\n    }\r\n  \r\n  \r\n    playButton = (url, id) => {\r\n      var audio = new Audio(url);\r\n      if(this.props.power){\r\n       audio.volume = this.props.volume\r\n       this.setState({\r\n         button: id\r\n       })\r\n       setTimeout(() => {\r\n         this.setState({\r\n           button: ''\r\n         })\r\n       }, 1500)\r\n       audio.play();\r\n      }\r\n    }\r\n    \r\n    render(){\r\n        return( \r\n          <div>\r\n            {/*<div className=\"row text-center\">\r\n               { this.props.isSoundButtons1 ? soundButtons1.map(sound => <Button\r\n               onClick={() => this.playButton(sound.url, sound.id)} value = {sound.key} url ={sound.url}/>) : soundButtons2.map(sound => <Button \r\n               onClick={() => this.playButton(sound.url, sound.id)} value = {sound.key} url ={sound.url}/>) }\r\n               \r\n              <div id=\"display\" className=\"col-12 displayer\">\r\n                  {this.state.button ? this.state.button : this.props.status ? this.props.status : \"\"}\r\n              </div>\r\n               \r\n               </div>         */}\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n\r\nexport default Board","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}